-- First, create a table to queue updates
create table if not exists country_update_queue (
  id bigint generated by default as identity primary key,
  user_id uuid not null references auth.users(id),
  domain text,
  target_country text,
  created_at timestamptz default now(),
  processed boolean default false,
  error text
);

-- Create indexes for better performance
create index if not exists idx_country_update_queue_processed on country_update_queue(processed);
create index if not exists idx_country_update_queue_user_id on country_update_queue(user_id);

-- Create a simpler trigger function that just adds to queue
create or replace function queue_country_update()
returns trigger
language plpgsql
security definer
as $$
begin
  if old.target_country is distinct from new.target_country then
    insert into country_update_queue (user_id, domain, target_country)
    values (new.user_id, new.domain, new.target_country);
  end if;
  return new;
end;
$$;

-- Drop old trigger if exists
drop trigger if exists on_country_update on business_information;

-- Create new trigger
create trigger on_country_update
  after update of target_country
  on business_information
  for each row
  execute function queue_country_update(); 